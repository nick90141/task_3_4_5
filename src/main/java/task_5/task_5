Що таке Серіалізація/десеріалізація?
Серіалізація - це процес передання стану об'єкта в потік байтів для збереження його в пам'яті, у базі даних або у файлі.
Основне призначення серіалізації – зберегти стан об'єкта для того, щоб мати можливість відновити його за потреби.
Десеріалізація - це процес перетворення закодованих даних (наприклад, у форматі JSON, XML або іншому) знову в об'єкти або структури даних в пам'яті комп'ютера.
Цей процес є протилежним до серіалізації, яка включає перетворення об'єктів або структур даних у формат, який може бути збережений на диску або переданий через мережу.


Що таке Маршаллінг/демаршаллінг?
Маршалинг — процес перетворення представлення об'єкта в пам'яті у формат даних, який придатний для зберігання або передання.
Зазвичай застосовується, коли дані необхідно передавати між різними частинами однієї програми або від однієї програми до іншої.
Демаршалінг - це процес перетворення серіалізованих даних назад у внутрішню структуру даних певного програмного середовища або мови програмування.
Серіалізація та демаршалінг є важливими процесами в області зберігання, передачі та обробки даних.


Розкажіть про XML, у чому різниця між HTML?
Різниця між XML і HTML:
Спрямованість: HTML (HyperText Markup Language) призначений для представлення структури та відображення веб-сторінок у браузерах. Він містить теги, які описують, які
елементи (наприклад, заголовки, списки, посилання тощо) повинні бути включені на сторінці. XML не має жодної зазначеної спрямованості і може використовуватись для
будь-якого типу даних.
Структура: HTML має попередньо визначені теги та структуру для відображення вмісту сторінки. XML дозволяє визначати власні теги та структуру для представлення даних.
Семантика: HTML визначає, як вміст має бути відображений на екрані. XML не має жодної вбудованої семантики і лише створює структурований формат для даних.
Валідація: HTML добре підходить для відображення у браузерах, і веб-браузери часто намагаються відображати сторінки навіть з помилками у розмітці.
XML може бути валідований за допомогою схем (XSD) або DTD для перевірки його коректності відповідно до заданої структури.


Які парсери в XML знаєте?
DOM (Document Object Model) Parser: Цей парсер завантажує весь XML-документ в пам'ять у вигляді дерева об'єктів, де кожен вузол представляє елемент XML.
Це дозволяє здійснювати будь-які операції з даними, але може бути недоцільним для великих документів через велику використану пам'ять.
SAX (Simple API for XML) Parser: У SAX-парсера документ не завантажується повністю в пам'ять. Замість цього, парсер реагує на події в документі, такі як відкриття тега,
закриття тега, текстові дані тощо. Це підходить для обробки великих XML-документів, але обмежує можливість доступу до вузлів документа.
StAX (Streaming API for XML) Parser: StAX-парсер подібний до SAX, але забезпечує більш зручний спосіб обробки XML-документів. Ви можете використовувати його як у стилі
подій (event-based), так і у стилі зчитування-запису (cursor-based).
JAXB (Java Architecture for XML Binding): JAXB - це технологія, що дозволяє перетворювати між XML-структурами і об'єктами Java. Вона використовує анотації для визначення
відповідності між елементами XML і полями/методами класів Java.


Що робить JSON?
JSON (або "JavaScript Object Notation") - це легкий формат обміну даними, який використовується для представлення структурованих інформаційних даних. JSON зазвичай
використовується для передачі даних між веб-серверами та клієнтами, а також для зберігання конфігураційних даних та налаштувань.


Що таке JAXB?
JAXB (Java Architecture for XML Binding) - це технологія у Java для перетворення між об'єктами Java і документами XML. Вона дозволяє легко взаємодіяти з XML-даними в Java-додатках,
забезпечуючи автоматичне зіставлення між структурами XML і класами Java. JAXB дозволяє вам генерувати Java-класи з XML-схем або навпаки - створювати XML-документи на основі
об'єктів Java.